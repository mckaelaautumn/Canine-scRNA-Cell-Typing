# Converting seurat to monocle for cell typing and then back to seurat for analysis #
# This particular cell typing protocol is for analysis of canine osteosarcoma scRNA seq data #
# McKaela Hodge #
# 11/30/2021 #

# Install Packages #

install.packages("devtools")
install_github("satijalab/seurat")
BiocManager::install("monocle")
devtools::install_github("cole-trapnell-lab/monocle-release@develop")
BiocManager::install(c("DDRTree", "pheatmap"), force = TRUE)
library(devtools)
library(Seurat)
library(ggplot2)
library(plotly)
library(dplyr)
library(SingleR)
library(scRNAseq)
library(celldex)
library(SingleCellExperiment)
library(monocle)
library(DDRTree)
library(pheatmap)

# Download Seurat File #

Osteo_3AMP <- readRDS("~/Downloads/Osteo_3AMP.rds")

# Convert Seurat to Monocle #

m.data <- as(as.matrix(Osteo_3AMP@assays$RNA@data), 'sparseMatrix')
pd <- new('AnnotatedDataFrame', data = Osteo_3AMP@meta.data)
fData <- data.frame(gene_short_name = row.names(m.data), row.names = row.names(m.data))
fd <- new('AnnotatedDataFrame', data = fData)
colnames(fd) <- "gene_short_name"
cds <- newCellDataSet(m.data, phenoData = pd, lowerDetectionLimit = 0.5, featureData = fd, expressionFamily = uninormal())
cth <- newCellTypeHierarchy()

# Cell Type #

# B Cell
CD79A_id <- row.names(subset(fData(cds), gene_short_name == "CD79A"))
cth <- addCellType(cth, "B Cell", classify_func = function(x) { x[CD79A_id,] > 0 & x[CD163_id,] <= 0 & x[CD3E_id,] <= 0 & x[MMP9_id,] <= 0 & x[MSRB1_id,] <= 0 & x[NCAM1_id,] <= 0})
# Erythorocyte
EPB41_id <- row.names(subset(fData(cds), gene_short_name == "EPB41"))
GYPA_id <- row.names(subset(fData(cds), gene_short_name == "GYPA"))
cth <- addCellType(cth, "Erythrocyte", classify_func = function(x) { x[GYPA_id,] > 0 & x[EPB41_id,] > 0 })
# Bone Marrow Stem Cell
COL6A3_id <- row.names(subset(fData(cds), gene_short_name == "COL6A3"))
SERPINH1_id <- row.names(subset(fData(cds), gene_short_name == "SERPINH1"))
THY1_id <- row.names(subset(fData(cds), gene_short_name == "THY1"))
cth <- addCellType(cth, "Bone Marrow Stem Cell", classify_func = function(x) { x[COL6A3_id,] > 0 & x[SERPINH1_id,] > 0 & x[THY1_id,] > 0 & x[ALPL_id,] <= 0 & x[CTSK_id,] <= 0 & x[PTH1R_id,] <= 0 & x[FBN1_id,] <= 0 })
# Chondrocyte
ACAN_id <- row.names(subset(fData(cds), gene_short_name == "ACAN"))
COL2A1_id <- row.names(subset(fData(cds), gene_short_name == "COL2A1"))
SOX9_id <- row.names(subset(fData(cds), gene_short_name == "SOX9"))
cth <- addCellType(cth, "Chondrocyte", classify_func = function(x) { x[ACAN_id,] > 0 & x[COL2A1_id,] > 0 & x[SOX9_id,] > 0})
# Dendritic Cell
CD40_id <- row.names(subset(fData(cds), gene_short_name == "CD40"))
CD86_id <- row.names(subset(fData(cds), gene_short_name == "CD86"))
cth <- addCellType(cth, "Dendritic Cell", classify_func = function(x) { x[CD40_id,] > 0 & x[CD86_id,] > 0 })
# Fibroblast
COL1A2_id <- row.names(subset(fData(cds), gene_short_name == "COL1A2"))
CXCL12_id <- row.names(subset(fData(cds), gene_short_name == "CXCL12"))
DCN_id <- row.names(subset(fData(cds), gene_short_name == "DCN"))
FBN1_id <- row.names(subset(fData(cds), gene_short_name == "FBN1"))
VCAM1_id <- row.names(subset(fData(cds), gene_short_name == "VCAM1"))
cth <- addCellType(cth, "Fibroblast", classify_func = function(x) { x[COL1A2_id,] > 0 & x[CXCL12_id,] > 0 & x[DCN_id,] > 0 & x[FBN1_id,] > 0 & x[VCAM1_id,] > 0 })
# Natural Killer Cell
NCAM1_id <- row.names(subset(fData(cds), gene_short_name == "NCAM1"))
cth <- addCellType(cth, "Natural Killer Cell", classify_func = function(x) { x[NCAM1_id,] > 0 & x[COL1A1_id,] <= 0 & x[CD3E_id,] <= 0 })
# Macrophage
CD163_id <- row.names(subset(fData(cds), gene_short_name == "CD163"))
cth <- addCellType(cth, "Macrophage", classify_func = function(x) { x[CD163_id,] > 0 })
# Neutrophil 1
MMP9_id <- row.names(subset(fData(cds), gene_short_name == "MMP9"))
MSRB1_id <- row.names(subset(fData(cds), gene_short_name == "MSRB1"))
TYROBP_id <- row.names(subset(fData(cds), gene_short_name == "TYROBP"))
cth <- addCellType(cth, "Neutrophil 1", classify_func = function(x) { x[S100A8_id,] > 0 & x[TYROBP_id,] > 0 & x[ELANE_id,] <= 0 & x[SLPI_id,] <= 0})
# Neutrophil 2
CAMP_id <- row.names(subset(fData(cds), gene_short_name == "CAMP"))
ELANE_id <- row.names(subset(fData(cds), gene_short_name == "ELANE"))
S100A8_id <- row.names(subset(fData(cds), gene_short_name == "S100A8"))
SLPI_id <- row.names(subset(fData(cds), gene_short_name == "SLPI"))
cth <- addCellType(cth, "Neutrophil 2", classify_func = function(x) { x[CAMP_id,] > 0 & x[ELANE_id,] > 0 & x[S100A8_id,] > 0 & x[SLPI_id,] > 0})
# Neutrophil 3
cth <- addCellType(cth, "Neutrophil 3", classify_func = function(x) { x[MMP9_id,] > 0 & x[TYROBP_id,] > 0 & x[ELANE_id,] <= 0 & x[S100A8_id,] <= 0 & x[SLPI_id,] <= 0})
# Osteoblast
ALPL_id <- row.names(subset(fData(cds), gene_short_name == "ALPL"))
COL1A1_id <- row.names(subset(fData(cds), gene_short_name == "COL1A1"))
PTH1R_id <- row.names(subset(fData(cds), gene_short_name == "PTH1R"))
cth <- addCellType(cth, "Osteoblast", classify_func = function(x) { x[ALPL_id,] > 0 & x[COL1A1_id,] > 0 & x[PTH1R_id,] > 0 & x[COL6A3_id,] <= 0 & x[CTSK_id,] <= 0 & x[FBN1_id,] <= 0})
# Osteoclast
ACP5_id <- row.names(subset(fData(cds), gene_short_name == "ACP5"))
CA2_id <- row.names(subset(fData(cds), gene_short_name == "CA2"))
CTSK_id <- row.names(subset(fData(cds), gene_short_name == "CTSK"))
cth <- addCellType(cth, "Osteoclast", classify_func = function(x) { x[ACP5_id,] > 0 & x[CA2_id,] > 0 & x[CTSK_id,] > 0 & x[ALPL_id,] <= 0 & x[COL6A3_id,] <= 0 & x[FBN1_id,] <= 0})
# T Cell
CD3E_id <- row.names(subset(fData(cds), gene_short_name == "CD3E"))
cth <- addCellType(cth, "T Cell", classify_func = function(x) { x[CD3E_id,] > 0 })

cds <- classifyCells(cds, cth, 0.1)

# Evaluate Cell Typing #

table(cds$CellType)
pie <- ggplot(pData(cds), aes(x = factor(1), fill = factor(CellType))) + geom_bar(width = 1)
pie + coord_polar(theta = "y") + theme(axis.title.x = element_blank(), axis.title.y = element_blank())

# Convert Monocle to Seurat #

count.mat <- Biobase::exprs(cds)
meta.df <- Biobase::pData(cds)
my.seurat <- CreateSeuratObject(counts = count.mat, project = "myproject", assay = "RNA", meta.data = meta.df)
my.seurat <- NormalizeData(my.seurat)
my.seurat <- FindVariableFeatures(my.seurat)
m.genes <- rownames(my.seurat)
my.seurat <- ScaleData(my.seurat, features = m.genes)
my.seurat <- RunPCA(my.seurat)
my.seurat <- FindNeighbors(my.seurat)
my.seurat <- FindClusters(my.seurat)
my.seurat <- RunTSNE(my.seurat, check_duplicates = FALSE)
my.seurat <- SetIdent(my.seurat, value = my.seurat@meta.data$CellType)

